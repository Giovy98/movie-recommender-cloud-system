name: GCP Deploy, Data Upload & GKE Configuration

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'preprocessing_service/**'
      - 'recommender_service/**'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  DOCKER_EMAIL: ${{ secrets.DOCKER_EMAIL }}
  ARTIFACT_REPOSITORY: ${{ secrets.ARTIFACT_REPOSITORY }}

jobs:
  # Job per rilevare i cambiamenti
  detect-changes:
    name: Detect Service Changes
    runs-on: ubuntu-latest
    outputs:
      preprocessing_changed: ${{ steps.changes.outputs.preprocessing_service }}
      recommender_changed: ${{ steps.changes.outputs.recommender_service }}
      workflow_changed: ${{ steps.changes.outputs.workflow }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Necessario per il confronto
    
    - name: Check for changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          preprocessing_service:
            - 'preprocessing_service/**'
          recommender_service:
            - 'recommender_service/**'

  upload-data:
    name: Upload Data to GCS
    runs-on: ubuntu-latest
    needs: detect-changes

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Check if data already exists in GCS
      id: check_data
      run: |
        echo "Controllo presenza dati in: gs://${{ secrets.GCP_BUCKET_NAME }}/raw/"
        if gsutil -q stat gs://${{ secrets.GCP_BUCKET_NAME }}/raw/*.csv; then
          echo "I dati esistono giÃ . Upload non necessario."
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "Dati non trovati. Procedo con l'upload."
          echo "skip=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload data to GCS
      if: steps.check_data.outputs.skip  == 'false'
      run: |
        echo "Contenuto della cartella data:"
        ls -la data/*
        gsutil -m cp -r data/*.csv gs://${{ secrets.GCP_BUCKET_NAME }}/raw
        echo "Dati caricati con successo su gs://${{ secrets.GCP_BUCKET_NAME }}/raw"

  # Job separati per ogni servizio
  build-push-preprocessing:
    name: Build & Push Preprocessing Service
    runs-on: ubuntu-latest
    needs: [upload-data, detect-changes]
    if: needs.detect-changes.outputs.preprocessing_changed == 'true'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Build and push preprocessing service
      run: |
        cd preprocessing_service
        echo "ðŸ”„ Building preprocessing_service..."
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/preprocessing_service:${{ github.sha }} .
        docker tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/preprocessing_service:${{ github.sha }} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/preprocessing_service:latest
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/preprocessing_service:${{ github.sha }}
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/preprocessing_service:latest
        echo "âœ… Preprocessing service built and pushed successfully"

  build-push-recommender:
    name: Build & Push Recommender Service
    runs-on: ubuntu-latest
    needs: [upload-data, detect-changes]
    if: needs.detect-changes.outputs.recommender_changed == 'true'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Build and push recommender service
      run: |
        cd recommender_service
        echo "ðŸ”„ Building recommender_service..."
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/recommender_service:${{ github.sha }} .
        docker tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/recommender_service:${{ github.sha }} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/recommender_service:latest
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/recommender_service:${{ github.sha }}
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPOSITORY }}/recommender_service:latest
        echo "âœ… Recommender service built and pushed successfully"
    
 